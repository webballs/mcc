body {
    font-family: Arial, sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background-color: #f0f0f0;
    margin: 0;
    overflow: hidden; /* Verhindert Scrollbalken bei Animationen */
}

.container {
    text-align: center;
    background-color: #fff;
    padding: 30px;
    border-radius: 10px;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

h1 {
    color: #333;
    margin-bottom: 20px;
}

#counter-display {
    font-size: 2em;
    font-weight: bold;
    color: #555;
    margin-bottom: 30px;
}

#click-count {
    color: #e67e22; /* Ein Cookie-Farbraum */
}

#cookie {
    width: 250px;
    height: 250px;
    cursor: pointer;
    transition: transform 0.1s ease-out; /* Kurze Animation beim Klick */
}

#cookie:active {
    transform: scale(0.95); /* Verkleinert den Cookie beim Klick leicht */
}

p {
    color: #777;
    margin-top: 20px;
}

/* Optionale Animation für Klick-Effekte */
.click-effect {
    position: absolute;
    color: #e67e22;
    font-size: 2em;
    font-weight: bold;
    pointer-events: none; /* Macht das Element klick-through */
    animation: fadeOutUp 1s forwards;
    opacity: 0;
}

@keyframes fadeOutUp {
    from {
        opacity: 1;
        transform: translateY(0);
    }
    to {
        opacity: 0;
        transform: translateY(-50px);
    }
}
/* public/microwave.css */

/* ... (vorheriger CSS-Code für body, .microwave-app-container, etc.) ... */

.microwave-display {
    position: relative; /* Wichtig für das Canvas-Element */
    width: 600px; /* Breite des 3D-Viewports, anpassen nach Bedarf */
    height: 400px; /* Höhe des 3D-Viewports, anpassen nach Bedarf */
    background-color: #000; /* Schwarzer Hintergrund für den 3D-Bereich, kann geändert werden */
    border: 2px solid #ccc;
    border-radius: 8px;
    overflow: hidden;
}

#microwaveCanvas {
    display: block; /* Entfernt zusätzlichen Platz unter dem Canvas */
    width: 100%;
    height: 100%;
}

/* ... (der Rest des CSS-Codes) ... */

/* Die .rotate Klasse und @keyframes spin von der vorherigen Drehung kannst du entfernen,
   wenn du nur die dauerhafte Drehung möchtest. */
/* .rotate {
    animation: spin 0.3s ease-out;
}

@keyframes spin {
    from {
        transform: rotate(0deg);
    }
    to {
        transform: rotate(30deg);
    }
} */